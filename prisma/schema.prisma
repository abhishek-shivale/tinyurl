// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LoginType {
  GOOGLE
  CREDENTIAL
}

enum UserRole {
  FREE
  PREMIUM
}

model User {
  id                 String         @id @default(uuid())
  name               String?
  email              String         @unique
  password           String?
  profileImage       String?
  loginType          LoginType
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  isVerified         Boolean        @default(false)
  role               UserRole       @default(FREE)
  shortUrls          ShortUrl[]
  billingDetails     BillingDetail?
  transactionHistory Transaction[]
}

model BillingDetail {
  id            String  @id @default(uuid())
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String  @unique
  address       String?
  city          String?
  state         String?
  country       String?
  postalCode    String?
  phoneNumber   String?
  paymentMethod String
}

model Transaction {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  amount      Float
  currency    String
  status      String
  createdAt   DateTime @default(now())
  description String
}

model ShortUrl {
  id            String    @id @default(cuid())
  originalUrl   String
  slug          String    @unique
  createdAt     DateTime  @default(now())
  clicks        Int       @default(0)
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  password      String?
  expiresAt     DateTime?
  lastClickedAt DateTime?

  @@index([slug], name: "idx_slug")
}
